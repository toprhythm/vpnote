(window.webpackJsonp=window.webpackJsonp||[]).push([[292],{756:function(t,e,s){"use strict";s.r(e);var a=s(35),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_15-什么是递归组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-什么是递归组件"}},[t._v("#")]),t._v(" 15-什么是递归组件")]),t._v(" "),s("p",[t._v("概念:组件是可以在它们自己的模板中调用自身的。")]),t._v(" "),s("p",[t._v('递归组件,一定要有一个结束的条件,否则就会使组件循环引用,最终出现的错误,我们可以使用v-if="false"作为递归组件的结束条件。当遇到v-i为false时,组件将不会再进行渲染。')]),t._v(" "),s("p",[t._v("既然要用递归组件,那么对我们的数据格式肯定是需要满足递归的条件的。就像下边这样,这是一个树状的递归数据。")])])}),[],!1,null,null,null);e.default=n.exports}}]);