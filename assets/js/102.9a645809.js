(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{566:function(v,_,l){"use strict";l.r(_);var i=l(35),t=Object(i.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h1",{attrs:{id:"chap01-数据结构算法的介绍"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#chap01-数据结构算法的介绍"}},[v._v("#")]),v._v(" chap01_数据结构算法的介绍")]),v._v(" "),l("h2",{attrs:{id:"邂逅数据结构算法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#邂逅数据结构算法"}},[v._v("#")]),v._v(" 邂逅数据结构算法")]),v._v(" "),l("ul",[l("li",[v._v("什么是数据结构和算法？\n"),l("ul",[l("li",[v._v("很多人只看字面意思，从不探究源码")]),v._v(" "),l("li",[v._v("因为编程学习中，没必要了解这些，一样能完成老大给的需求（语法，业务逻辑）")]),v._v(" "),l("li",[v._v("数据结构和算法是什么？不需要太关心。")]),v._v(" "),l("li",[v._v("如果你只想留在语言的应用层面（api工程师），数据结构算法并不重要。")]),v._v(" "),l("li",[v._v("如果你想了解一门语言如何设计的(手写vue的架构师)，那么数据结构算法十分重要。")])])]),v._v(" "),l("li",[v._v("举例子：\n"),l("ul",[l("li",[v._v("java的线性结构列表，中有ArrayList和LinkedList，如何选择？")]),v._v(" "),l("li",[v._v("死记住规则，你也可以很好的选择，但如果你知道两种数据结构的构造，你会很轻松的抉择。")]),v._v(" "),l("li",[v._v("虽然我们不从头到尾设计编程语言，但是熟悉数据结构算法同样重要！")])])]),v._v(" "),l("li",[v._v("什么时候想去学习数据结构和算法？\n"),l("ul",[l("li",[v._v("面试被问到")]),v._v(" "),l("li",[v._v("工作一两年")])])])]),v._v(" "),l("h2",{attrs:{id:"什么是数据结构和算法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#什么是数据结构和算法"}},[v._v("#")]),v._v(" 什么是数据结构和算法")]),v._v(" "),l("ul",[l("li",[v._v("民间定义：\n"),l("ul",[l("li",[v._v("数据结构是 数据对象 ，以及 存在于该对象的的实例 和 组成实例的数据元素之间的各种联系。这些联系可以定义相关的函数来给出 -- <<数据结构、算法与应用>>")]),v._v(" "),l("li",[v._v("数据结构是ADT（抽象数据类型 Abstract Data Type）的物理实现 -- <<数据结构与算法分析>>")]),v._v(" "),l("li",[v._v("数据结构（data structure）是计算机中存储、组织数据的方式。通常情况下，精心选择的数据结构可以带来最优效率的算法 -- 中文维基百科")])])]),v._v(" "),l("li",[v._v("自己的角度：\n"),l("ul",[l("li",[v._v("数据结构就是 在计算机中，存储和组织数据的方式")]),v._v(" "),l("li",[v._v("我们知道，计算机中数据量十分庞大，如何以高效的方式组织和存储呢？")]),v._v(" "),l("li",[v._v("这就好比一个庞大的图书馆中存放了大量的书籍，我们不仅仅要把书放入，要应该在合适的时候取出来")])])]),v._v(" "),l("li",[v._v("如何摆放书籍\n"),l("ul",[l("li",[v._v("如果书相对较少，我们可以随意摆放")]),v._v(" "),l("li",[v._v("如果书相对较多，")])])]),v._v(" "),l("li",[v._v("图书摆放需要实现两个功能\n"),l("ul",[l("li",[v._v("操作1：新书如何插入？")]),v._v(" "),l("li",[v._v("操作2：怎么找到某本指定的书？")])])]),v._v(" "),l("li",[v._v("方法1：随便放\n"),l("ul",[l("li",[v._v("操作1：哪里有空位放哪里")]),v._v(" "),l("li",[v._v("操作2：找某本书，累死")])])]),v._v(" "),l("li",[v._v("方法2：按照书名的拼音字母顺序摆放\n"),l("ul",[l("li",[v._v("操作1：新进一本《啊Q正传》，按照字母顺序找到位置，插入")]),v._v(" "),l("li",[v._v("操作2：二分查找法")])])]),v._v(" "),l("li",[v._v("方法3：把书架分为几块区域，按照类别存放，类别中按照字母顺序排列\n"),l("ul",[l("li",[v._v("操作1：先定类别，二分查找确定位置，移出空位")]),v._v(" "),l("li",[v._v("操作2：先定类别，再二分查找")])])]),v._v(" "),l("li",[v._v("结论：\n"),l("ul",[l("li",[v._v("解决问题的效率，根 数据的组织方式 有关")]),v._v(" "),l("li",[v._v("计算机中存储的数据量相对于图书馆的书籍来说 数据量更大，数据种类更多")]),v._v(" "),l("li",[v._v("以什么样的方式，来存储和组织我们的数据才可以在使用数据的时候更方便？")]),v._v(" "),l("li",[v._v("这就是数据结构需要考虑的问题")])])]),v._v(" "),l("li",[v._v("常见的数据结构\n"),l("ul",[l("li",[v._v("数组（Array）")]),v._v(" "),l("li",[v._v("栈（Stack）")]),v._v(" "),l("li",[v._v("链表（Linked List）")]),v._v(" "),l("li",[v._v("图 （Graph）")]),v._v(" "),l("li",[v._v("散列表（Hash）")]),v._v(" "),l("li",[v._v("队列（Queue）")]),v._v(" "),l("li",[v._v("树（Tree）")]),v._v(" "),l("li",[v._v("堆（Heap）")])])]),v._v(" "),l("li",[v._v("常见的数据结构很多\n"),l("ul",[l("li",[v._v("每一种都有不同的应用场景，不同的数据结构 和 不同操作 性能是不同的。")]),v._v(" "),l("li",[v._v("有的查询性能更快，有的插入速度更快，有的是插入头更快，有的是插入尾更快")]),v._v(" "),l("li",[v._v("有的做范围查找更快，有的允许元素重复，有的不允许重复等等")]),v._v(" "),l("li",[v._v("在开发中如何选择，要根据具体的需求来选择")])])]),v._v(" "),l("li",[v._v("注意：数据结构和语言无关，常见编程语言都有直接或者间接使用上述常见的数据结构")]),v._v(" "),l("li",[v._v("为什么之前不接触数据结构，好像只使用过数组\n"),l("ul",[l("li",[v._v("单纯从 程序猿 角度，不需要过多了解结构的实现细节，api调用即可")]),v._v(" "),l("li",[v._v("但是简单的使用不能让我们更加灵活的使用他们，了解真相，你才能获得真正的自由！")])])])]),v._v(" "),l("h2",{attrs:{id:"什么是算法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#什么是算法"}},[v._v("#")]),v._v(" 什么是算法？")]),v._v(" "),l("ul",[l("li",[v._v("算法（AIgorithm）的认识\n"),l("ul",[l("li",[v._v("在之前的学习中可能学习过几种数组排序js算法，并且知道，不同的算法，执行效率不一样")]),v._v(" "),l("li",[v._v("也就是说 解决问题 的过程中，不仅仅是数据的存储方式会影响效率，算法的优劣也会影响效率")]),v._v(" "),l("li",[v._v("那么什么是算法")])])]),v._v(" "),l("li",[v._v("算法的定义：\n"),l("ul",[l("li",[v._v("一个有限指令集，每条指令的描述不依赖与任何一门编程语言")]),v._v(" "),l("li",[v._v("接受一些输入（有些情况下需要输入）")]),v._v(" "),l("li",[v._v("产生输出")]),v._v(" "),l("li",[v._v("一定在有限步骤后停止")])])]),v._v(" "),l("li",[v._v("点灯不工作的解决方法：\n"),l("ul",[l("li",[v._v("1.电灯不工作了")]),v._v(" "),l("li",[l("ol",{attrs:{start:"2"}},[l("li",[v._v("if判断电源接好了吗，否：接上电源，是：往下走")])])]),v._v(" "),l("li",[l("ol",{attrs:{start:"3"}},[l("li",[v._v("if判断灯泡烧毁了吗，否：继续往下走，是：更换灯泡")])])]),v._v(" "),l("li",[l("ol",{attrs:{start:"4"}},[l("li",[v._v("这就是解决这个问题的算法")])])])])])]),v._v(" "),l("h2",{attrs:{id:"生活中的数据结构与算法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#生活中的数据结构与算法"}},[v._v("#")]),v._v(" 生活中的数据结构与算法")]),v._v(" "),l("ul",[l("li",[v._v("前面我们提到了生活中的数据结构与算法：图书的摆放\n"),l("ul",[l("li",[v._v("为了更加方便的插入和搜索书籍，需要合理的组织数据，并且通过更加高效的算法插入和查询数据")]),v._v(" "),l("li",[v._v("除了这些，生活中还有很多案例")])])]),v._v(" "),l("li",[v._v("快递员的快递\n"),l("ul",[l("li",[v._v("上大学期间有没有收到过快递？")]),v._v(" "),l("li",[v._v("通常快递放在固定的地方（菜鸟），让大家自己去拿")]),v._v(" "),l("li",[v._v("当你跑到固定的方式去拿快递，还有两种情况，一种自己去海量的快递中找，另一种是给快递员爆出你的手机号和姓名，它帮你找")]),v._v(" "),l("li",[v._v("自己寻找相当于线性查找，一个个挨个看，当然人类的眼睛处理起来不算慢，可能很快就能找到")]),v._v(" "),l("li",[v._v("但是比较好的方式，应该是快递员帮我们找如果这个快递员动脑子的话，最好的方式就是对快递进行分类，比如按照名字分类")]),v._v(" "),l("li",[v._v("这个时候，你只要爆出名字，他会根据姓氏一眼锁定到一个快递，再根据名字马上帮你找到")]),v._v(" "),l("li",[v._v("这就体现出了合理的组织数据，对于我们获取数据效率的重要性至关重要")])])]),v._v(" "),l("li",[v._v("找出线缆出问题的地方：\n"),l("ul",[l("li",[v._v("假设杭州到京城之间有一个高架线，高架线长度是1000000米，有一天高架线其中有一米出现了故障")]),v._v(" "),l("li",[v._v("请你想出一种算法，可以快速定位到出问题的地方。")]),v._v(" "),l("li",[v._v("方法1：线性查找，一米一米从start开始排查，一直到end,最多到1000000次")]),v._v(" "),l("li",[v._v("方法2：二分查找，一开始在两条线的最中间圈一个点，分为两段，先查左边这一段，发现没问题，再给右边那段分出两段，中间圈一个点，再查右半边线的左边一般，每一次都进行一个划分，1000000米的线log(1000000/ 2)约等于 20 次")])])])]),v._v(" "),l("h2",{attrs:{id:"数组的扩展"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#数组的扩展"}},[v._v("#")]),v._v(" 数组的扩展")]),v._v(" "),l("ul",[l("li",[v._v("js的数组就是API的调用\n"),l("ul",[l("li",[v._v("因此，不讲，溜了一份笔记给我们看")])])])])])}),[],!1,null,null,null);_.default=t.exports}}]);